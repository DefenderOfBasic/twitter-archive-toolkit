import{U as x}from"./util-Dez4eFDU.js";const q=new Dexie("TweetDatabase");q.version(1).stores({tweets:"id, data, url"});window.tweet_db=q;const S={TWEETS:{btn:"tweets-btn"},EVERYTHING:{btn:"everything-btn"},FOLLOWERS:{btn:"followers-btn"},TOP:{btn:"top-btn"},STATS:{btn:"stats-btn"}};let w=[];const p=document.querySelector("#datasource-input");localStorage.getItem("archiveUrl")&&(p.value=localStorage.getItem("archiveUrl"));const $=new URLSearchParams(window.location.search);$.get("url")&&(p.value=$.get("url"));E();let a=new x({db:q,key:1});async function k(){try{const e=p.value;w=await a.fetchArchive(e),document.querySelector("#title").innerHTML=`${a.username} (${w.length.toLocaleString()} tweets)`,v()}catch(e){console.error(e),b(`Failed to fetch tweets: ${String(e)}`)}g(!1),document.querySelector("#search").oninput=e=>{const n=new RegExp(e.target.value);window.regex=n,v()},document.querySelector("#fetch-btn").onclick=async e=>{try{b(""),g(!0),document.querySelector("#title").innerHTML="Loading..",w=await a.fetchArchive(p.value),document.querySelector("#title").innerHTML=`${a.username} (${w.length.toLocaleString()} tweets)`,g(!1),v(),localStorage.setItem("archiveUrl",p.value),_("url",p.value)}catch(n){g(!1),console.error(n),b(`Failed to fetch tweets: ${String(n)}`)}}}k();function g(e){e?(document.querySelector("#search").style.display="none",document.querySelector("#loading-text").style.display="block"):(document.querySelector("#search").style.display="block",document.querySelector("#loading-text").style.display="none")}function b(e){document.querySelector("#error").innerHTML=e}function v(){document.querySelector("#error").innerHTML="",document.querySelector("#search").style.display="block";const e=document.querySelector("#tweet-container");document.querySelector("#tweet-counts").innerHTML="",e.innerHTML="loading...";const n=M().toUpperCase(),s={TWEETS:P,EVERYTHING:D,FOLLOWERS:C,TOP:I,STATS:U};s[n]?setTimeout(()=>{try{s[n]()}catch(c){console.error(c),b("Error: "+c)}},10):console.error("No function found for ",n)}function E(){new URLSearchParams(window.location.search);const e=M(),n=Object.values(S).map(c=>c.btn),s=S[e].btn;document.querySelector(`#${s}`).classList.add("disabled-link"),n.forEach(c=>{document.querySelector(`#${c}`).addEventListener("click",function(m){m.preventDefault();const i=Object.keys(S).find(l=>S[l].btn===c);_("mode",i),n.forEach(l=>document.querySelector(`#${l}`).classList.remove("disabled-link")),document.querySelector(`#${c}`).classList.add("disabled-link"),v()})})}function P(){const e=document.querySelector("#tweet-container");let n=a.sortAscending(w);const s=a.getThreads(n),{retweet_count:c,external_reply_count:m}=s;n=s.tweets;let i="";for(let l=0;l<n.length;l++){const r=n[l];window.regex&&!window.regex.test(r.full_text)||r.parent||(r.nextTweet==null?i+=a.makeHTMLForTweet(r):i+=a.makeHTMLForThread(r))}document.querySelector("#tweet-counts").innerHTML=`retweets: ${c} (hidden) non-self replies: ${m} (hidden)`,e.innerHTML=i}function D(){const e=document.querySelector("#tweet-container"),n=document.querySelector("#tweet-counts");let s=a.sortAscending(w),c=0,m=0,i="";for(let l=0;l<s.length;l++){const r=s[l];window.regex&&!window.regex.test(r.full_text)||(i+=a.makeHTMLForTweet(r),r.full_text.startsWith("RT")&&c++,r.in_reply_to_status_id!=null&&m++)}e.innerHTML=i,n.innerHTML=`retweets: ${c} replies: ${m}`}function I(){const e=document.querySelector("#tweet-container"),n=document.querySelector("#tweet-counts");let s=0,c=0;for(let r of w)s+=Number(r.favorite_count),c+=Number(r.retweet_count);let i=a.getThreads(w).tweets;i=i.sort(function(r,o){return o.favorite_count-r.favorite_count});let l="";for(let r=0;r<i.length;r++){const o=i[r];window.regex&&!window.regex.test(o.full_text)||o.parent==null&&(o.favorite_count<20||(l+=a.makeHTMLForTweet(o)))}e.innerHTML=l,n.innerHTML=`Total: 🔂 ${c.toLocaleString()} 🤍 ${s.toLocaleString()}`}function U(){const e=document.querySelector("#tweet-container");document.querySelector("#tweet-counts"),document.querySelector("#search").style.display="none",e.innerHTML=`
			<div>
			<h2 style="margin-bottom:0px;"> Popularity over time </h2>
			<p class="muted-text" style="margin-top:0px;"> (number of likes + retweets per day) </p>
			<div id="popularity-chart"></div>

			<h2> Tweets by day of week </h2>
			<div style='height: auto; width: 600px;'><canvas id="bar-chart"></canvas></div>
		
			<h2> Days with the most tweets </h2>
			<ul id="days"></ul>
		
			<h2> Hours with the most tweets </h2>
			<ul id="hours"></ul>
		
			<h2> Tweets by hour </h2>
			<div style='height: auto; width: 600px;'><canvas id="hour-bar-chart"></canvas></div>
		
		
			</div>
			`;const n=a.getPopularityOverTime(w);Plotly.newPlot(e.querySelector("#popularity-chart"),[{x:n.map(t=>t.x),y:n.map(t=>t.y)}],{margin:{t:0}});const s=e.querySelector("#bar-chart"),c=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],m=[];for(let t=0;t<c.length;t++)m[t]=0;for(let t of w){const y=t.date.getDay();m[y]++}new Chart(s,{type:"bar",data:{labels:c,datasets:[{label:"# of tweets",data:m,borderWidth:1}]}});const i=a.countTweetsPerDay(w),l=document.querySelector("#days"),r={year:"numeric",month:"short",day:"2-digit"};for(let t=0;t<5;t++){const{date:y,count:T}=i[t];l.innerHTML+=`<li>${a.formatDate(new Date(y),r)} (${T})</li>`}const o=a.countTweetsPerHour(w),u=document.querySelector("#hours");for(let t=0;t<5;t++){const{date:y,count:T}=o[t],f=y.split("/"),L=H(Number(f[1]));u.innerHTML+=`<li>${a.formatDate(new Date(f[0]),r)} ${L} (${T})</li>`}const h=[];for(let t=0;t<24;t++)h.push(H(t));const d=[];for(let t=0;t<h.length;t++)d[t]=0;for(let t of w){const y=t.date.getHours();d[y]++}new Chart(document.querySelector("#hour-bar-chart"),{type:"bar",data:{labels:h,datasets:[{label:"# of tweets",data:d,borderWidth:1}]}})}async function C(){const e=document.querySelector("#tweet-container"),n=document.querySelector("#tweet-counts");document.querySelector("#search").style.display="none",n.innerHTML="fetching follower data...",e.innerHTML="",a.following;const s={},c={};n.innerHTML="";for(let o=0;o<w.length;o++){const u=w[o],h=u.entities.user_mentions;for(let d of h)s[d.id]=d,c[d.id]==null&&(c[d.id]=[]),c[d.id].push(u)}const m=Object.entries(c).map(([o,u])=>[o,u.length]).sort((o,u)=>u[1]-o[1]);e.innerHTML+=`
			<div>
			<h2>Top mentions</h2>
			<ul id="interactions"></ul>
		
			<h2> First few interactions with each follower </h2>
			<div id="first-interactions"></div>
			</div>
			`;for(let o=0;o<m.length;o++){const u=m[o],h=u[0],d=u[1];if(h==a.accountId)continue;const{screen_name:t,name:y}=s[h];if(e.querySelector("#interactions").innerHTML+=`<li>${y} (@${t}): ${d}</li>`,o>10)break}let i=Object.entries(c).map(([o,u])=>[o,u.sort((h,d)=>h.date-d.date)]);i=i.sort((o,u)=>o[1][0].date-u[1][0].date);const l=document.querySelector("#first-interactions");let r="";for(let o of i){const u=o[0],h=o[1],{screen_name:d,name:t}=s[u],y=a.username,T=`https://twitter.com/search?q=(from%3A%40${y} to%3A%40`+encodeURIComponent(d)+`) OR (to%3A%40${y} from%3A%40`+encodeURIComponent(d)+")&src=typed_query&f=live";r+=`<h4 style="margin-bottom:0px;">${t} (@${d}) (${h.length})</h4> 
				<a href="${T}" target="_blank">see all interactions</a><br/>
				<div class="tweet-container" style="margin-top:10px;">
				`;for(let f=0;f<h.length;f++){const L=h[f];if(r+=a.makeHTMLForTweet(L),f>6)break}r+="</div>"}l.innerHTML=r}function M(){return new URLSearchParams(window.location.search).get("mode")??"TWEETS"}const H=e=>e===0?"12 am":e===12?"12 pm":e<12?`${e} am`:`${e-12} pm`;function _(e,n){const s=new URLSearchParams(window.location.search);s.set(e,n),window.history.replaceState({},"",`${window.location.pathname}?${s}`)}
