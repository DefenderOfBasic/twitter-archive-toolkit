import{U as g}from"./util-o58FNkjN.js";const w=new Dexie("TweetDatabase");w.version(1).stores({tweets:"id, data, url"});let t;const r=document.querySelector("#datasource-input");localStorage.getItem("archiveUrl")&&(r.value=localStorage.getItem("archiveUrl"));const u=new URLSearchParams(window.location.search);u.get("url")&&(r.value=u.get("url"));let a=new g({db:w,key:1});async function h(){console.log("Fetching");try{const e=r.value;t=await a.fetchArchive(e),document.querySelector("#title").innerHTML=`${a.username} (${t.length.toLocaleString()} tweets)`,console.log(t),d(t)}catch(e){console.error(e),i(`Failed to fetch tweets: ${String(e)}`)}c(!1),document.querySelector("#fetch-btn").onclick=async e=>{try{i(""),c(!0),document.querySelector("#title").innerHTML="Loading..",t=await a.fetchArchive(r.value),document.querySelector("#title").innerHTML=`${a.username} (${t.length.toLocaleString()} tweets)`,c(!1),localStorage.setItem("archiveUrl",r.value),f("url",r.value),d(t)}catch(o){c(!1),console.error(o),i(`Failed to fetch tweets: ${String(o)}`)}}}h();function d(e){let n='<p class="muted-text">Showing first 1000 tweets:</p>';const s=a.sortAscending(e);for(let l=0;l<s.length;l++){const m=s[l];if(n+=`<p>${m.full_text}</p>`,l>1e3)break}document.querySelector("#tweet-container").innerHTML=n}function i(e){document.querySelector("#error").innerHTML=e}function c(e){e?document.querySelector("#loading-text").style.display="block":document.querySelector("#loading-text").style.display="none"}function f(e,o){const n=new URLSearchParams(window.location.search);n.set(e,o),window.history.replaceState({},"",`${window.location.pathname}?${n}`)}
